- Q:支持代码块的导入
    - 需要学习模板的内如何嵌入js和css，并作为资源本地同步
- Q:把原始问题转换为广义拉格朗日函数(generalized Lagrange function)是怎样的？
    - $$L(x, \alpha, \beta)=f(x)+\sum_{i=1}^{k} \alpha_{i} c_{i}(x)+\sum_{j=1}^{l} \beta_{j} h_{j}(x)$$
    - 这里，$$x=\left(x^{(1)}, x^{(2)}, \cdots, x^{(n)}\right)^{\mathrm{T}} \in \mathbf{R}^{n}, \alpha_{i}, \beta_{j}$$是拉格朗日乘子，$$\alpha_{i} \geqslant 0$$
    - 定义一个x的函数，即把广义拉格朗日函数取最值
    - $$\theta_{P}(x)=\max _{\alpha, \beta: \alpha_{i} \geqslant 0} L(x, \alpha, \beta)$$
    - 这里，下标P表示原问题
- Q:原始最优化问题是什么？
    - 假设$$f(x), c_{i}(x), h_{j}(x)$$是定义在$$\mathbf{R}^{n}$$上的连续可微函数，则约束最优化问题
    - $$\begin{array}{ll}
\underset{x \in \mathbf{R}^{n}}{\min} & f(x) \\
\text { s.t. } & c_{i}(x) \leqslant 0, \quad i=1,2, \cdots, k \\
& h_{j}(x)=0, \quad j=1,2, \cdots, l
\end{array}$$
    - 为原始最优化问题或原始问题
- Q:测试案例
    - 多行内容1
    - 内容12222
        - mmhhr
            - drrdrddrrd
                - 9p8zxm89
    - 小标题1
        - 加点难度Q
    - 小标题2
        - ooooo
- Q:Dijkstra算法的起点s到达顶点$$V_i(0\leqslant i \leqslant n - 1)$$具体实现是什么？
    - 令int型数组d[]表示起点s到达顶点$$V_i$$的最短距离，初始时除了起点s的d[s]赋为0，其余顶点都赋为一个很大的数(可用$$10^9$$，或十六进制0x3fffffff，(7个f)，注意不能用0x7fffffff，因为两个这样的数相加可能会超过int的表示范围)来表达inf，即不可达
- Q:Dijkstra算法的伪代码是什么？
    - ```clojure
//G为图，一般设成全局变量；数组d为源点到达各点的最短路径长度，s为起点
Dijkstra(G, d[], s) {
    初始化；
    for (循环n次) {
        u = 使d[u]最小的还未被访问的顶点的标号；
        记u已被访问；
        for (从u出发能到达的所有顶点v) {
            if (v未被访问&&以u为中介点使s到顶点v的最短距离d[v]更优) {
                优化d[v];
                令v的前驱为u;//若要记录最短路径加这个
            }
        }
    }
}```
- Q:使用机器学习模型的几个步骤是什么？
是什么呢？
    - 1.数据预处理：如去除噪声等，如在文本分类中去掉停用词
    - 4.预测：学习一个函数并进行预测
    - ![](https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%2Fapp%2Fshiqi%2Fd5LHKYOjq1.png?alt=media&token=b2a4cb3a-f9c6-49ac-a792-ed27a27e1dbe)
- Q:测试案例333
    - 多**行内**容1
    - 内__容12__222
    - m~~mh~~hr
    - drrdr^^dd^^rrd
    - 9p8`zxm`89
- ## 完善一下用户调用程序的体验
    - ### 支持程序外的指定文件和目录，以及指定语言
    - # 就是就是